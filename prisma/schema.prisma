// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Event {
  id          String   @id @default(cuid())
  name        String
  description String?
  date        DateTime
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Spot        Spot[]
}

model Spot {
  id                 String               @id @default(cuid())
  name               String
  status             SpotStatus
  eventId            String
  Event              Event                @relation(fields: [eventId], references: [id])
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  Ticket             Ticket?
  ReservationHistory ReservationHistory[]
}

enum SpotStatus {
  available
  reserved
}

model Ticket {
  id         String     @id @default(cuid())
  ticketKind TicketKind
  email      String
  spotId     String
  Spot       Spot       @relation(fields: [spotId], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@unique([spotId])
}

enum TicketKind {
  full
  half
}

model ReservationHistory {
  id         String     @id @default(cuid())
  spotId     String
  ticketKind TicketKind
  status     SpotStatus
  email      String
  Spot       Spot       @relation(fields: [spotId], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}
